{"version":3,"file":"index.js","sources":["src/renderer.js","src/domUtil.js","src/diamond.js","src/index.js"],"sourcesContent":["export default function renderer( fragment ) {\n    \n    init( fragment );\n    \n    return function render() {\n        const clone = fragment.cloneNode(true);\n        const nodes = clone.querySelectorAll('[data-bind]');\n        nodes[ nodes.length ] = clone;\n        return nodes;\n    };\n}\n\nconst replace = {\n    'text-node': () => document.createTextNode( '' ),\n    'block-node': () => document.createComment( 'block' )\n};\n\nconst query = Object.keys( replace ).join();\n\nfunction init( fragment ) {\n\n    const nodes = fragment.querySelectorAll( query );\n    \n    let  node = null, newNode = null;\n    \n    for( var i = 0, l = nodes.length; i < l; i++ ) {\n        node = nodes[i];\n        newNode = replace[ node.localName ]( node );\n        node.parentNode.replaceChild( newNode, node );\n    }\n}","\nexport function makeFragment(html) {\n    return toFragment(makeDiv(html).childNodes);\n}\n\nexport function toFragment(childNodes) {\n    const fragment = document.createDocumentFragment();\n    \n    let node;\n    while(node = childNodes[0]) {\n        fragment.appendChild(node);\n    }\n\n    return fragment;\n}\n\nconst div = document.createElement('div');\nexport function makeDiv(html) {\n    div.innerHTML = html;\n    return div;\n}\n\nexport function makeHtml(html) {\n    return makeDiv(html).innerHTML;\n}","\nexport { default as renderer } from './renderer';\n\nexport { makeFragment } from './domUtil';\n\nexport { default as __first } from './operators/first';\nexport { default as __map } from './operators/map';\nexport { default as __combine } from './operators/combine';\n\nexport function _(){}\nexport { _ as html };\nexport function $(){}\n\nexport { default as __textBinder } from './binders/text';\nexport { default as __blockBinder } from './binders/block';","import { html as _ } from './diamond';\n// import { BehaviorSubject } from 'rxjs-es/BehaviorSubject';\n// import { Observable } from 'rxjs-es/Observable';\n// import 'rxjs-es/add/observable/of';\n// import 'rxjs-es/add/observable/from';\n// import 'rxjs-es/add/operator/map';\n// import 'rxjs-es/add/operator/mergeMap';\n// import 'rxjs-es/add/operator/let';\n\nconst names = [];\nfor(let i = 0; i < 1000; i++) {\n    names.push(`Name${i}`);\n}\n\nconsole.time('render');\n\nconst template = names => _`\n    <h1>Names</h1>\n    <ul>${names.map(name => _`\n        <li>Hello ${name}</li>\n    `)}#\n    </ul>\n`;\n\n\n\ndocument.body.appendChild(template(names));\n\nconsole.timeEnd('render');\n\n\n// console.time('render from');\n// const template2 = names => _`\n//     <h1>Names</h1>\n//     <ul>\n//     @${names.map(name => _`\n//         <li>Hello ${name}</li>\n//     `)}#\n//     </ul>\n// `;\n\n\n\n// document.body.appendChild(template2(Observable.from(names)));\n\n// console.timeEnd('render from');\n\n\n// const name = new BehaviorSubject('Marty');\n\n// const observed = name => _`\n//     <div>Hello @${name}<div>\n// `;\n\n// document.body.appendChild(observed(name));\n\n// document.getElementById('change').addEventListener('click', () => name.next('Freddy'));\n\n"],"names":[],"mappings":";;AAYA,MAAM,OAAO,GAAG;IACZ,WAAW,EAAE,MAAM,QAAQ,CAAC,cAAc,EAAE,EAAE,EAAE;IAChD,YAAY,EAAE,MAAM,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE;CACxD,CAAC;;AAEF,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI,EAAE;;ACD3C,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;;ACPlC,SAAS,CAAC,EAAE,EAAE;;ACRrB;;;;;;;;AAQA,MAAM,KAAK,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC1B,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CAC1B;;AAED,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEvB,MAAM,QAAQ,GAAG,KAAK,IAAI,CAAC,CAAC;;QAEpB,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC;kBACZ,EAAE,IAAI,CAAC;IACrB,CAAC,CAAC,CAAC;;AAEP,CAAC,CAAC;;;;AAIF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;AAE3C,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;0FA4BgE"}